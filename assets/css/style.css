/*

    We're going to make a structural backbone here so as to show the order of the styles.  Lay them out as carefully as possible.  Use the index html as a guide to see where we need to go for this to happen:

*/

/*

    Use this base: 

*/

/*
    The base skeleton if you need to make another section
*/
/* =========== Start of =========== */
/* =========== End of =========== */



/* =========== Start of Universal Declaration =========== */
* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    /*background-color: rgb(165, 168, 202);*/  /*This property is making ALL that has a background set to this color, including text.  Find a way around this*/
}

:root{

    --main-lightteal-color: #67d6d6; /*use:  var(--main-white-color); */
    --font-family-one: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif; /*use: var(--font-family-one); */
    --display-inline: inline-block; /*use: var(--display-inline); */
    --font-color-one: teal;    /*Use: var(--font-color-one); */
    --dark-color: #252525; /*use: var(--dark-color); */

}

a {
    color: teal;     /* Changing the link color to this */
    text-decoration: none;              /* This is to ensure if there's a line or not */
}

p {
    font-family: var(--font-family-one);
}


/* =========== End of Universal Declaration =========== */


/* =========== Start of Header =========== */



header {

    padding: 20px 0px 20px 0px;
    font-family: var(--font-family-one);
    background-color: var(--dark-color);
    color: var(--dark-color);

    /*This is what's needed to have the text move.  Remember the following:
    
    display:flex causes the purple line
    justify-content: space-between adds spacing on the contents
    flex-wrap:wrap: if there is no space, it'll go to another line

    */
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;

}

header h1 {

    padding: 5px 5px 5px 35px;
    /*We're taking out the inline display*/
    /*display: var(--display-inline);*/
    font-size: 48px;
    background-color: teal;
    height: 70px;

}

header nav {
    background-color: var(--dark-color);
    padding-top: 15px;
    margin-right: 70px;
    float: right;
    font-family: var(--font-family-one);
    font-size: 20px;
    /*Note that there is no inline display*/
}

header nav ul {
    list-style-type: none;
    background-color: var(--dark-color);
}

header nav ul li {
    background-color: var(--dark-color);
    display: var(--display-inline);
    margin-left: 25px;
}

/* We're in the header, going to nav, that's inside ul, in the li, and any text that has 'a' in it */
header nav ul li a {
    background-color: var(--dark-color);
    border-bottom-style: solid;     /* Adding solid line on the bottome of text */
    padding: 0px 10px 0px 10px;                   /*Adding spacing around the text */
    font-size: 25px;
}

/* =========== End of Header =========== */


/* =========== Start of Banner =========== */
.banner {
    height: 250px;
    position: relative;
    margin-bottom: 25px;
    background-image: url("../images/blue-banner.jpg");
    background-size: cover;
    background-position: center;
}

.bottom-right {
    position: absolute;         /* This will cause the text to be inside the image */
    padding: 10px;              /* Have some spacing around the text */
    background-color: teal;   /* Have a background set behind the color */
    bottom: 16px;               /* Move it from the bottom */
    right: 60px;                /* Move it from the right */
}

.bottom-right h2 {
    font-size: 35px;            /* Change the size of the font */
    color: var(--dark-color);             /* Color of the text */
    font-family: var(--font-family-one);
    background-color: teal;

}

/* =========== End of Banner =========== */

/* 
    =============================================================

    This is going to be the area for the articles (total of 3) that we're
    going to use for the portfolio.  The ones we need to focus on
    are as follows:

        -About Me
        -Works
        -Contact Me

    They have their own separate classes to identify themselves differently
    from one another.  Declare this section class first and then we need to
    have each section separated from each other.

    =============================================================

*/

/* =========== Start of Section Declaration =========== */

section {
    padding: 30px;
}

/* =========== End of Section Declaration =========== */

/* =========== Start of Content =========== */

.content {
    margin-left: 20px;   
}

.content h2 {
    font-family: var(--font-family-one);
    text-align:right;
    font-size: 35px;
    top: 8px;
    right: 16px;
}

/* =========== End of Content =========== */

/* =========== Start of Article Declaration =========== */

article {
    margin-bottom: 20px;
    margin-left: 20px;

    /*I'm making an attempt to have the flex property added here.  If we do, all the contents within the article should fall in place*/
    display: flex;
    /*We're not aligning the contents here.  The columns are to the left and the contents are at the side of the right*/
    /*justify-content: space-between;*/
    flex-wrap: wrap;

}


/* =========== End of Article Declaration =========== */

/* =========== Start of Article Design =========== */

.about-me, .work, .contact-me {
    overflow: auto;
    margin: 0 0 30px 20px;
}

.about-me aside, .work aside , .contact-me aside {
    /*flex:1;*/
    width: 200px;
    padding: 10px 10px 5px 10px;
    float: left;
    border-right-style: solid;

}


.about-me figure, .work figure , .contact-me nav {

    /*
    This is creating an error.  The reason why is because we're not really flexing this property.  If anything, only one should be doing this, which is the section involving the work figure
    flex: 4;
    display: flex;
    flex-wrap: wrap;
    */
    padding: 10px 0 0px 40px;
}

/*We need one more value that needs to be added.  The box, itself, has various of layers that deals with the work.  We need to make sure that also is flex*/

.work figure {
    flex: 2;
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;

}

/* 

    This section is for the style of putting placeholders/work in the Work section
    The current code for this is: 
    
        <article id="work-section" class="work">

    This section will cover the div that's inside that.  Current style:  <div>

*/

.work-card {
    border-style: solid;
    border-width: 1px;
    border-radius: 10px;
    padding: 10px;
    height: 400px;
    flex: 0 0 600px;
    background-color: teal;
    margin: 10px;
}




.photo {

    /*Adding to see if this highlighted thing works.  I'm making the overall card a relative position: */
    width: auto;
    height: 100%;
    background-size: cover;
    background-position: center;
    position: relative;

}

.resizephoto {
    position: relative;
    width:100%;
    height: 370px;
}

/*I'm making an attempt to have this change color when it is overlaying the picture*/
.overlay {

    position: absolute;
    background-color:yellow;
    opacity: 0.3;

}

.text-box{

    width: 100%;
    height: 100px;
    padding: 20px;
    position: absolute;
    bottom: 50px;
    left: 0;
    right: 0;
    background-color: orange;

}

.text-box h3, .text-box p{

    display: var(--display-inline);

}


.icon-clicks {

    height: 50px;
    width: 50px;
    float:right;
    
}


/*
    Okay.  This is going to be a bit tricky to explain, but here's how it goes:
    We need to have this property WITHIN the div.  I made a new div and called this one 'photo'.  The container 'photo' has a relative position.  Inside said photo class, there is an image that is being identified.  You need to do this so that only the picture is affected.  Next, we have this set of code that's above this line that deals with what it needs to do when the overlay is called.  For this, we have it set to absolute so it can overlay the photo itself.  I have it set to background-color yellow.  Next, we have the next set of lines to be the overlay effect.

    On this one, we needed to have the position set to 0 on the bottom, left, and right.  We need to do this so that when it is called, it knows where to start.  The reason why is because if we had a transition, it'll start from there and then it'll start filling the overall picture.  The height of it is at max, so it'll fill the whole thing.

    One thing:  Right now, we're missing an opacity property.  There's one more thing to note:  The picture itself isn't exactly a square.  It's a rectangle that is fit inside the column section.  What this means is that part of the picture is not filled on the column itself.  So when the transition happens, it'll color the overall thing, INCLUDING THE SPACE that isn't filled by the image.

*/
.photo:hover .overlay{
      bottom:0;
      left: 0;
      right: 0;
      height:100%;
}



/* This section is reserved for the contact information style for the last part */

.contact-me nav {
    padding-top: 40px;
    padding-bottom: 40px;
    font-family: var(--font-family-one);
}

.contact-me nav ul {

    
    /*Something worth noting about this:  With the justify-content, we had the value of the space defined before.  When we applied it on the HEADER, we shifted THIS list so that it is taken to the right.  If we decrease the size, the space in between THIS content and the HEADER will decrease.  Now the question is:  

    Why did we needed another justify-content here?  Is it by default?*/
    /*Adding the purple line on it: 

    */
    display: flex;
    /* Contents will go below if the screen is small */
    flex-wrap: wrap;
    /*There are two more commands being used.  Pay attention carefully:
    
    align-items is like the justify-conent, but on the opposite axis.  flex-box operates in the main axis.  We need to be careful since the line above works, by default, on the horizontal axis and the one below follows the vertical axis.  But if we were to define the flex-direction to column, then the main and cross would be flipped.

    Keep in mind that the flex-direction is "row" by default.  Change this to "column" if you want it to be flipped.

    ;*/
    align-items: center;

    /*This sets how a list item is styled (bullet points, dashes, etc.) and positioned (indented or outdented).  Changed the value to none to hide the bullet points. */

    /* Though another question:  We already defined this to be none in the main section.  Why do we need this here? */

    list-style: none;
}


.contact-me nav ul li {
    margin: 10px;
}

.contact-me nav ul li a {
    border-bottom-style: solid;     /* Adding solid line on the bottome of text */
    padding: 10px 10px 5px 10px;                   /*Adding spacing around the text */
    font-size: 20px;
    color: var(--dark-color);
    font-weight: bold;
}

/* =========== Start of Article Design =========== */

/* =========== Start of About Me for the Content =========== */
/* =========== End of About Me for the Content =========== */

/* =========== Start of Work for the Content =========== */
/* =========== End of Work for the Content =========== */

/* =========== Start of Contact Me for the Content =========== */
/* =========== End of Contact Me for the Content =========== */